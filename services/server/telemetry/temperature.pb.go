// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.5.1
// source: temperature.proto

package telemetry

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Temp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temp       float32 `protobuf:"fixed32,1,opt,name=temp,proto3" json:"temp,omitempty"`
	LocationId int32   `protobuf:"varint,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
}

func (x *Temp) Reset() {
	*x = Temp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temperature_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Temp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Temp) ProtoMessage() {}

func (x *Temp) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Temp.ProtoReflect.Descriptor instead.
func (*Temp) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{0}
}

func (x *Temp) GetTemp() float32 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *Temp) GetLocationId() int32 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

type GetTempsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int32 `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
}

func (x *GetTempsRequest) Reset() {
	*x = GetTempsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temperature_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTempsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTempsRequest) ProtoMessage() {}

func (x *GetTempsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTempsRequest.ProtoReflect.Descriptor instead.
func (*GetTempsRequest) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{1}
}

func (x *GetTempsRequest) GetLocationId() int32 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

type GetTempsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temps []float32 `protobuf:"fixed32,1,rep,packed,name=temps,proto3" json:"temps,omitempty"`
}

func (x *GetTempsResponse) Reset() {
	*x = GetTempsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temperature_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTempsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTempsResponse) ProtoMessage() {}

func (x *GetTempsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTempsResponse.ProtoReflect.Descriptor instead.
func (*GetTempsResponse) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{2}
}

func (x *GetTempsResponse) GetTemps() []float32 {
	if x != nil {
		return x.Temps
	}
	return nil
}

var File_temperature_proto protoreflect.FileDescriptor

var file_temperature_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x04, 0x54, 0x65, 0x6d,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x74, 0x65, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x65, 0x6d, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05, 0x74,
	0x65, 0x6d, 0x70, 0x73, 0x32, 0xdd, 0x01, 0x0a, 0x05, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x12, 0x6b,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x12, 0x1a, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x73, 0x12, 0x67, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x0f, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x25, 0x2f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70,
	0x7d, 0x3a, 0x01, 0x2a, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_temperature_proto_rawDescOnce sync.Once
	file_temperature_proto_rawDescData = file_temperature_proto_rawDesc
)

func file_temperature_proto_rawDescGZIP() []byte {
	file_temperature_proto_rawDescOnce.Do(func() {
		file_temperature_proto_rawDescData = protoimpl.X.CompressGZIP(file_temperature_proto_rawDescData)
	})
	return file_temperature_proto_rawDescData
}

var file_temperature_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_temperature_proto_goTypes = []interface{}{
	(*Temp)(nil),             // 0: telemetry.Temp
	(*GetTempsRequest)(nil),  // 1: telemetry.GetTempsRequest
	(*GetTempsResponse)(nil), // 2: telemetry.GetTempsResponse
	(*empty.Empty)(nil),      // 3: google.protobuf.Empty
}
var file_temperature_proto_depIdxs = []int32{
	1, // 0: telemetry.Temps.GetTemps:input_type -> telemetry.GetTempsRequest
	0, // 1: telemetry.Temps.CreateTemp:input_type -> telemetry.Temp
	2, // 2: telemetry.Temps.GetTemps:output_type -> telemetry.GetTempsResponse
	3, // 3: telemetry.Temps.CreateTemp:output_type -> google.protobuf.Empty
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_temperature_proto_init() }
func file_temperature_proto_init() {
	if File_temperature_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_temperature_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Temp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temperature_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTempsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temperature_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTempsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_temperature_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_temperature_proto_goTypes,
		DependencyIndexes: file_temperature_proto_depIdxs,
		MessageInfos:      file_temperature_proto_msgTypes,
	}.Build()
	File_temperature_proto = out.File
	file_temperature_proto_rawDesc = nil
	file_temperature_proto_goTypes = nil
	file_temperature_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TempsClient is the client API for Temps service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TempsClient interface {
	GetTemps(ctx context.Context, in *GetTempsRequest, opts ...grpc.CallOption) (*GetTempsResponse, error)
	CreateTemp(ctx context.Context, in *Temp, opts ...grpc.CallOption) (*empty.Empty, error)
}

type tempsClient struct {
	cc grpc.ClientConnInterface
}

func NewTempsClient(cc grpc.ClientConnInterface) TempsClient {
	return &tempsClient{cc}
}

func (c *tempsClient) GetTemps(ctx context.Context, in *GetTempsRequest, opts ...grpc.CallOption) (*GetTempsResponse, error) {
	out := new(GetTempsResponse)
	err := c.cc.Invoke(ctx, "/telemetry.Temps/GetTemps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tempsClient) CreateTemp(ctx context.Context, in *Temp, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/telemetry.Temps/CreateTemp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TempsServer is the server API for Temps service.
type TempsServer interface {
	GetTemps(context.Context, *GetTempsRequest) (*GetTempsResponse, error)
	CreateTemp(context.Context, *Temp) (*empty.Empty, error)
}

// UnimplementedTempsServer can be embedded to have forward compatible implementations.
type UnimplementedTempsServer struct {
}

func (*UnimplementedTempsServer) GetTemps(context.Context, *GetTempsRequest) (*GetTempsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTemps not implemented")
}
func (*UnimplementedTempsServer) CreateTemp(context.Context, *Temp) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTemp not implemented")
}

func RegisterTempsServer(s *grpc.Server, srv TempsServer) {
	s.RegisterService(&_Temps_serviceDesc, srv)
}

func _Temps_GetTemps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTempsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TempsServer).GetTemps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/telemetry.Temps/GetTemps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TempsServer).GetTemps(ctx, req.(*GetTempsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Temps_CreateTemp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Temp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TempsServer).CreateTemp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/telemetry.Temps/CreateTemp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TempsServer).CreateTemp(ctx, req.(*Temp))
	}
	return interceptor(ctx, in, info, handler)
}

var _Temps_serviceDesc = grpc.ServiceDesc{
	ServiceName: "telemetry.Temps",
	HandlerType: (*TempsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTemps",
			Handler:    _Temps_GetTemps_Handler,
		},
		{
			MethodName: "CreateTemp",
			Handler:    _Temps_CreateTemp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "temperature.proto",
}
